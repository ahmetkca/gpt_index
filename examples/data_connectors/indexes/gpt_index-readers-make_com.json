{"index_struct": {"text": "\nThe documents contain a MakeWrapper class, which is a wrapper for the Make.com API. It has two methods: load_data() and pass_response_to_webhook(). The pass_response_to_webhook() method sends a POST request with a response object and query to a webhook URL. The documents also include a test response and query to demonstrate the functionality of the pass_response_to_webhook() method.", "doc_id": "7ce209b6-d640-4ebc-8b10-61d706cbdbdd", "embedding": null, "extra_info": null, "all_nodes": {"0": {"text": "\"\"\"Init params.\"\"\"\n", "doc_id": null, "embedding": null, "extra_info": {"file_path": "gpt_index/readers/make_com/__init__.py", "file_name": "__init__.py"}, "index": 0, "child_indices": [], "ref_doc_id": "c637335013c599b07de054fba07b47ecb86ad3e8", "node_info": null}, "1": {"text": "\"\"\"Make.com API wrapper.\n\nCurrently cannot load documents.\n\n\"\"\"\n\nfrom typing import Any, List, Optional\n\nimport requests\n\nfrom gpt_index.readers.base import BaseReader\nfrom gpt_index.readers.schema.base import Document\nfrom gpt_index.response.schema import Response, SourceNode\n\n\nclass MakeWrapper(BaseReader):\n    \"\"\"Make reader.\"\"\"\n\n    def load_data(self, *args: Any, **load_kwargs: Any) -> List[Document]:\n        \"\"\"Load data from the input directory.\n\n        NOTE: This is not implemented.\n\n        \"\"\"\n        raise NotImplementedError(\"Cannot load documents from Make.com API.\")\n\n    def pass_response_to_webhook(\n        self, webhook_url: str, response: Response, query: Optional[str] = None\n    ) -> None:\n        \"\"\"Pass response object to webhook.\n\n        Args:\n         ", "doc_id": null, "embedding": null, "extra_info": {"file_path": "gpt_index/readers/make_com/wrapper.py", "file_name": "wrapper.py"}, "index": 1, "child_indices": [], "ref_doc_id": "6c57299640176cee5463a5f48d05457667821f22", "node_info": null}, "2": {"text": "    Args:\n            webhook_url (str): Webhook URL.\n            response (Response): Response object.\n            query (Optional[str]): Query. Defaults to None.\n\n        \"\"\"\n        response_text = response.response\n        source_nodes = [n.to_dict() for n in response.source_nodes]\n        json_dict = {\n            \"response\": response_text,\n            \"source_nodes\": source_nodes,\n            \"query\": query,\n        }\n        r = requests.post(webhook_url, json=json_dict)\n        r.raise_for_status()\n\n\nif __name__ == \"__main__\":\n    wrapper = MakeWrapper()\n    test_response = Response(\n ", "doc_id": null, "embedding": null, "extra_info": {"file_path": "gpt_index/readers/make_com/wrapper.py", "file_name": "wrapper.py"}, "index": 2, "child_indices": [], "ref_doc_id": "6c57299640176cee5463a5f48d05457667821f22", "node_info": null}, "3": {"text": "MakeWrapper()\n    test_response = Response(\n        response=\"test response\",\n        source_nodes=[SourceNode(source_text=\"test source\", doc_id=\"test id\")],\n    )\n    wrapper.pass_response_to_webhook(\n        \"https://hook.us1.make.com/asdfadsfasdfasdfd\",\n        test_response,\n        \"Test query\",\n    )\n", "doc_id": null, "embedding": null, "extra_info": {"file_path": "gpt_index/readers/make_com/wrapper.py", "file_name": "wrapper.py"}, "index": 3, "child_indices": [], "ref_doc_id": "6c57299640176cee5463a5f48d05457667821f22", "node_info": null}, "4": {"text": "This code file contains the MakeWrapper class, which is a wrapper for the Make.com API. It contains the load_data() and pass_response_to_webhook() methods. The load_data() method is not implemented, and the pass_response_to_webhook() method takes a webhook URL, response object, and query as arguments and sends a POST request with the response object and query to the webhook URL. The code also contains a test response and query to demonstrate the functionality of the pass_response_to_webhook() method.", "doc_id": null, "embedding": null, "extra_info": null, "index": 4, "child_indices": [0, 1, 2, 3], "ref_doc_id": null, "node_info": null}}, "root_nodes": {"4": {"text": "This code file contains the MakeWrapper class, which is a wrapper for the Make.com API. It contains the load_data() and pass_response_to_webhook() methods. The load_data() method is not implemented, and the pass_response_to_webhook() method takes a webhook URL, response object, and query as arguments and sends a POST request with the response object and query to the webhook URL. The code also contains a test response and query to demonstrate the functionality of the pass_response_to_webhook() method.", "doc_id": null, "embedding": null, "extra_info": null, "index": 4, "child_indices": [0, 1, 2, 3], "ref_doc_id": null, "node_info": null}}}, "docstore": {"docs": {"c637335013c599b07de054fba07b47ecb86ad3e8": {"text": "\"\"\"Init params.\"\"\"\n", "doc_id": "c637335013c599b07de054fba07b47ecb86ad3e8", "embedding": null, "extra_info": {"file_path": "gpt_index/readers/make_com/__init__.py", "file_name": "__init__.py"}, "__type__": "Document"}, "6c57299640176cee5463a5f48d05457667821f22": {"text": "\"\"\"Make.com API wrapper.\n\nCurrently cannot load documents.\n\n\"\"\"\n\nfrom typing import Any, List, Optional\n\nimport requests\n\nfrom gpt_index.readers.base import BaseReader\nfrom gpt_index.readers.schema.base import Document\nfrom gpt_index.response.schema import Response, SourceNode\n\n\nclass MakeWrapper(BaseReader):\n    \"\"\"Make reader.\"\"\"\n\n    def load_data(self, *args: Any, **load_kwargs: Any) -> List[Document]:\n        \"\"\"Load data from the input directory.\n\n        NOTE: This is not implemented.\n\n        \"\"\"\n        raise NotImplementedError(\"Cannot load documents from Make.com API.\")\n\n    def pass_response_to_webhook(\n        self, webhook_url: str, response: Response, query: Optional[str] = None\n    ) -> None:\n        \"\"\"Pass response object to webhook.\n\n        Args:\n            webhook_url (str): Webhook URL.\n            response (Response): Response object.\n            query (Optional[str]): Query. Defaults to None.\n\n        \"\"\"\n        response_text = response.response\n        source_nodes = [n.to_dict() for n in response.source_nodes]\n        json_dict = {\n            \"response\": response_text,\n            \"source_nodes\": source_nodes,\n            \"query\": query,\n        }\n        r = requests.post(webhook_url, json=json_dict)\n        r.raise_for_status()\n\n\nif __name__ == \"__main__\":\n    wrapper = MakeWrapper()\n    test_response = Response(\n        response=\"test response\",\n        source_nodes=[SourceNode(source_text=\"test source\", doc_id=\"test id\")],\n    )\n    wrapper.pass_response_to_webhook(\n        \"https://hook.us1.make.com/asdfadsfasdfasdfd\",\n        test_response,\n        \"Test query\",\n    )\n", "doc_id": "6c57299640176cee5463a5f48d05457667821f22", "embedding": null, "extra_info": {"file_path": "gpt_index/readers/make_com/wrapper.py", "file_name": "wrapper.py"}, "__type__": "Document"}, "7ce209b6-d640-4ebc-8b10-61d706cbdbdd": {"text": "\nThe documents contain a MakeWrapper class, which is a wrapper for the Make.com API. It has two methods: load_data() and pass_response_to_webhook(). The pass_response_to_webhook() method sends a POST request with a response object and query to a webhook URL. The documents also include a test response and query to demonstrate the functionality of the pass_response_to_webhook() method.", "doc_id": "7ce209b6-d640-4ebc-8b10-61d706cbdbdd", "embedding": null, "extra_info": null, "all_nodes": {"0": {"text": "\"\"\"Init params.\"\"\"\n", "doc_id": null, "embedding": null, "extra_info": {"file_path": "gpt_index/readers/make_com/__init__.py", "file_name": "__init__.py"}, "index": 0, "child_indices": [], "ref_doc_id": "c637335013c599b07de054fba07b47ecb86ad3e8", "node_info": null}, "1": {"text": "\"\"\"Make.com API wrapper.\n\nCurrently cannot load documents.\n\n\"\"\"\n\nfrom typing import Any, List, Optional\n\nimport requests\n\nfrom gpt_index.readers.base import BaseReader\nfrom gpt_index.readers.schema.base import Document\nfrom gpt_index.response.schema import Response, SourceNode\n\n\nclass MakeWrapper(BaseReader):\n    \"\"\"Make reader.\"\"\"\n\n    def load_data(self, *args: Any, **load_kwargs: Any) -> List[Document]:\n        \"\"\"Load data from the input directory.\n\n        NOTE: This is not implemented.\n\n        \"\"\"\n        raise NotImplementedError(\"Cannot load documents from Make.com API.\")\n\n    def pass_response_to_webhook(\n        self, webhook_url: str, response: Response, query: Optional[str] = None\n    ) -> None:\n        \"\"\"Pass response object to webhook.\n\n        Args:\n         ", "doc_id": null, "embedding": null, "extra_info": {"file_path": "gpt_index/readers/make_com/wrapper.py", "file_name": "wrapper.py"}, "index": 1, "child_indices": [], "ref_doc_id": "6c57299640176cee5463a5f48d05457667821f22", "node_info": null}, "2": {"text": "    Args:\n            webhook_url (str): Webhook URL.\n            response (Response): Response object.\n            query (Optional[str]): Query. Defaults to None.\n\n        \"\"\"\n        response_text = response.response\n        source_nodes = [n.to_dict() for n in response.source_nodes]\n        json_dict = {\n            \"response\": response_text,\n            \"source_nodes\": source_nodes,\n            \"query\": query,\n        }\n        r = requests.post(webhook_url, json=json_dict)\n        r.raise_for_status()\n\n\nif __name__ == \"__main__\":\n    wrapper = MakeWrapper()\n    test_response = Response(\n ", "doc_id": null, "embedding": null, "extra_info": {"file_path": "gpt_index/readers/make_com/wrapper.py", "file_name": "wrapper.py"}, "index": 2, "child_indices": [], "ref_doc_id": "6c57299640176cee5463a5f48d05457667821f22", "node_info": null}, "3": {"text": "MakeWrapper()\n    test_response = Response(\n        response=\"test response\",\n        source_nodes=[SourceNode(source_text=\"test source\", doc_id=\"test id\")],\n    )\n    wrapper.pass_response_to_webhook(\n        \"https://hook.us1.make.com/asdfadsfasdfasdfd\",\n        test_response,\n        \"Test query\",\n    )\n", "doc_id": null, "embedding": null, "extra_info": {"file_path": "gpt_index/readers/make_com/wrapper.py", "file_name": "wrapper.py"}, "index": 3, "child_indices": [], "ref_doc_id": "6c57299640176cee5463a5f48d05457667821f22", "node_info": null}, "4": {"text": "This code file contains the MakeWrapper class, which is a wrapper for the Make.com API. It contains the load_data() and pass_response_to_webhook() methods. The load_data() method is not implemented, and the pass_response_to_webhook() method takes a webhook URL, response object, and query as arguments and sends a POST request with the response object and query to the webhook URL. The code also contains a test response and query to demonstrate the functionality of the pass_response_to_webhook() method.", "doc_id": null, "embedding": null, "extra_info": null, "index": 4, "child_indices": [0, 1, 2, 3], "ref_doc_id": null, "node_info": null}}, "root_nodes": {"4": {"text": "This code file contains the MakeWrapper class, which is a wrapper for the Make.com API. It contains the load_data() and pass_response_to_webhook() methods. The load_data() method is not implemented, and the pass_response_to_webhook() method takes a webhook URL, response object, and query as arguments and sends a POST request with the response object and query to the webhook URL. The code also contains a test response and query to demonstrate the functionality of the pass_response_to_webhook() method.", "doc_id": null, "embedding": null, "extra_info": null, "index": 4, "child_indices": [0, 1, 2, 3], "ref_doc_id": null, "node_info": null}}, "__type__": "tree"}}}}