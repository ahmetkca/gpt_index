{"index_struct": {"text": "\nThe GPT Index is a Python package that allows users to contribute to its development. It provides a Github Issues Page to track bug fixes, new features, and other tasks. To contribute, users should fork the GPT Index repo, create a Python virtual environment, and install the required dependencies. The code includes formatting/linting, testing, and creating an example notebook to ensure changes are valid before creating a pull request against the main GPT Index repo. The code is organized into functions, classes, and variables that interact with each other to provide the desired functionality. The purpose of the code is to provide a platform for users to contribute to the development of the GPT Index package.", "doc_id": "4a348c76-56c3-4302-9864-34d6b9c74c6e", "embedding": null, "extra_info": null, "all_nodes": {"0": {"text": "\n\n\ud83d\udca1 Contributing to GPT Index\n\nInterested in contributing to GPT Index? Here's how to get started! \n\n\n\n\n\nContributions that we're looking for:\n- Bug fixes\n- New features\n\nAll future tasks are tracked in Github Issues Page.\nPlease feel free to open an issue and/or assign an issue to yourself.\n\nAlso, join our Discord for discussions: https://discord.gg/dGcwcsnxhU.\n\n\n\n\n\nEnvironment Setup\n\nGPT Index is a Python package. We've tested primarily with Python versions >= 3.8. Here's a quick\nand dirty guide to getting your environment setup.\n\nFirst, create a fork of GPT Index, by clicking the \"Fork\" button on the GPT Index Github page.\nFollowing these steps for more details\non how to fork the repo and clone the forked repo.\n\nThen, create a new Python virtual environment. The command below creates an environment in `.venv`,\nand activates it:\n```bash\npython -m venv .venv\nsource .venv/bin/activate\n```\n\nInstall the required dependencies (this will also install gpt-index through `pip install -e .` \nso that you can start developing on it):\n\n```bash\npip install -r requirements.txt\n```\n\nNow you should be set! \n\n\n\n\n\n\nValidating your Change\n\nLet's make sure to `format/lint` our change. For bigger", "doc_id": null, "embedding": null, "extra_info": {"file_path": "CONTRIBUTING.md", "file_name": "CONTRIBUTING.md"}, "index": 0, "child_indices": [], "ref_doc_id": "024b24be1818f09f3b9cd631d9a2a851df2b99ae", "node_info": null}, "1": {"text": "Change\n\nLet's make sure to `format/lint` our change. For bigger changes,\nlet's also make sure to `test` it and perhaps create an `example notebook`.\n\n\n\n\n\nFormatting/Linting\n\nYou can format and lint your changes with the following commands in the root directory:\n\n```bash\nmake format; make lint\n```\n\nWe run an assortment of linters: `black`, `isort`, `mypy`, `flake8`.\n\n\n\n\n\nTesting\n\nFor bigger changes, you'll want to create a unit test. Our tests are in the `tests` folder.\nWe use `pytest` for unit testing. To run all unit tests, run the following in the root dir:\n\n```bash\npytest tests\n```\n\n\n\n\n\nCreating an Example Notebook\n\nFor changes that involve entirely new features, it may be worth adding an example Jupyter notebook to showcase\nthis feature. \n\nExample notebooks can be found in this folder: https://github.com/jerryjliu/gpt_index/tree/main/examples.\n\n\n\n\n\n\nCreating a pull request\n\nSee these instructions\nto open a pull request against the main GPT Index repo.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "doc_id": null, "embedding": null, "extra_info": {"file_path": "CONTRIBUTING.md", "file_name": "CONTRIBUTING.md"}, "index": 1, "child_indices": [], "ref_doc_id": "024b24be1818f09f3b9cd631d9a2a851df2b99ae", "node_info": null}, "2": {"text": "GPT Index is a Python package that allows users to contribute to its development. Contributions can include bug fixes, new features, and other tasks that are tracked in the Github Issues Page. To get started, users should fork the GPT Index repo, create a Python virtual environment, and install the required dependencies. Formatting/linting, testing, and creating an example notebook are all important steps to take before creating a pull request against the main GPT Index repo.", "doc_id": null, "embedding": null, "extra_info": null, "index": 2, "child_indices": [0, 1], "ref_doc_id": null, "node_info": null}}, "root_nodes": {"2": {"text": "GPT Index is a Python package that allows users to contribute to its development. Contributions can include bug fixes, new features, and other tasks that are tracked in the Github Issues Page. To get started, users should fork the GPT Index repo, create a Python virtual environment, and install the required dependencies. Formatting/linting, testing, and creating an example notebook are all important steps to take before creating a pull request against the main GPT Index repo.", "doc_id": null, "embedding": null, "extra_info": null, "index": 2, "child_indices": [0, 1], "ref_doc_id": null, "node_info": null}}}, "docstore": {"docs": {"024b24be1818f09f3b9cd631d9a2a851df2b99ae": {"text": "\n\n\ud83d\udca1 Contributing to GPT Index\n\nInterested in contributing to GPT Index? Here's how to get started! \n\n\n\n\n\nContributions that we're looking for:\n- Bug fixes\n- New features\n\nAll future tasks are tracked in Github Issues Page.\nPlease feel free to open an issue and/or assign an issue to yourself.\n\nAlso, join our Discord for discussions: https://discord.gg/dGcwcsnxhU.\n\n\n\n\n\nEnvironment Setup\n\nGPT Index is a Python package. We've tested primarily with Python versions >= 3.8. Here's a quick\nand dirty guide to getting your environment setup.\n\nFirst, create a fork of GPT Index, by clicking the \"Fork\" button on the GPT Index Github page.\nFollowing these steps for more details\non how to fork the repo and clone the forked repo.\n\nThen, create a new Python virtual environment. The command below creates an environment in `.venv`,\nand activates it:\n```bash\npython -m venv .venv\nsource .venv/bin/activate\n```\n\nInstall the required dependencies (this will also install gpt-index through `pip install -e .` \nso that you can start developing on it):\n\n```bash\npip install -r requirements.txt\n```\n\nNow you should be set! \n\n\n\n\n\n\nValidating your Change\n\nLet's make sure to `format/lint` our change. For bigger changes,\nlet's also make sure to `test` it and perhaps create an `example notebook`.\n\n\n\n\n\nFormatting/Linting\n\nYou can format and lint your changes with the following commands in the root directory:\n\n```bash\nmake format; make lint\n```\n\nWe run an assortment of linters: `black`, `isort`, `mypy`, `flake8`.\n\n\n\n\n\nTesting\n\nFor bigger changes, you'll want to create a unit test. Our tests are in the `tests` folder.\nWe use `pytest` for unit testing. To run all unit tests, run the following in the root dir:\n\n```bash\npytest tests\n```\n\n\n\n\n\nCreating an Example Notebook\n\nFor changes that involve entirely new features, it may be worth adding an example Jupyter notebook to showcase\nthis feature. \n\nExample notebooks can be found in this folder: https://github.com/jerryjliu/gpt_index/tree/main/examples.\n\n\n\n\n\n\nCreating a pull request\n\nSee these instructions\nto open a pull request against the main GPT Index repo.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "doc_id": "024b24be1818f09f3b9cd631d9a2a851df2b99ae", "embedding": null, "extra_info": {"file_path": "CONTRIBUTING.md", "file_name": "CONTRIBUTING.md"}, "__type__": "Document"}, "4a348c76-56c3-4302-9864-34d6b9c74c6e": {"text": "\nThe GPT Index is a Python package that allows users to contribute to its development. It provides a Github Issues Page to track bug fixes, new features, and other tasks. To contribute, users should fork the GPT Index repo, create a Python virtual environment, and install the required dependencies. The code includes formatting/linting, testing, and creating an example notebook to ensure changes are valid before creating a pull request against the main GPT Index repo. The code is organized into functions, classes, and variables that interact with each other to provide the desired functionality. The purpose of the code is to provide a platform for users to contribute to the development of the GPT Index package.", "doc_id": "4a348c76-56c3-4302-9864-34d6b9c74c6e", "embedding": null, "extra_info": null, "all_nodes": {"0": {"text": "\n\n\ud83d\udca1 Contributing to GPT Index\n\nInterested in contributing to GPT Index? Here's how to get started! \n\n\n\n\n\nContributions that we're looking for:\n- Bug fixes\n- New features\n\nAll future tasks are tracked in Github Issues Page.\nPlease feel free to open an issue and/or assign an issue to yourself.\n\nAlso, join our Discord for discussions: https://discord.gg/dGcwcsnxhU.\n\n\n\n\n\nEnvironment Setup\n\nGPT Index is a Python package. We've tested primarily with Python versions >= 3.8. Here's a quick\nand dirty guide to getting your environment setup.\n\nFirst, create a fork of GPT Index, by clicking the \"Fork\" button on the GPT Index Github page.\nFollowing these steps for more details\non how to fork the repo and clone the forked repo.\n\nThen, create a new Python virtual environment. The command below creates an environment in `.venv`,\nand activates it:\n```bash\npython -m venv .venv\nsource .venv/bin/activate\n```\n\nInstall the required dependencies (this will also install gpt-index through `pip install -e .` \nso that you can start developing on it):\n\n```bash\npip install -r requirements.txt\n```\n\nNow you should be set! \n\n\n\n\n\n\nValidating your Change\n\nLet's make sure to `format/lint` our change. For bigger", "doc_id": null, "embedding": null, "extra_info": {"file_path": "CONTRIBUTING.md", "file_name": "CONTRIBUTING.md"}, "index": 0, "child_indices": [], "ref_doc_id": "024b24be1818f09f3b9cd631d9a2a851df2b99ae", "node_info": null}, "1": {"text": "Change\n\nLet's make sure to `format/lint` our change. For bigger changes,\nlet's also make sure to `test` it and perhaps create an `example notebook`.\n\n\n\n\n\nFormatting/Linting\n\nYou can format and lint your changes with the following commands in the root directory:\n\n```bash\nmake format; make lint\n```\n\nWe run an assortment of linters: `black`, `isort`, `mypy`, `flake8`.\n\n\n\n\n\nTesting\n\nFor bigger changes, you'll want to create a unit test. Our tests are in the `tests` folder.\nWe use `pytest` for unit testing. To run all unit tests, run the following in the root dir:\n\n```bash\npytest tests\n```\n\n\n\n\n\nCreating an Example Notebook\n\nFor changes that involve entirely new features, it may be worth adding an example Jupyter notebook to showcase\nthis feature. \n\nExample notebooks can be found in this folder: https://github.com/jerryjliu/gpt_index/tree/main/examples.\n\n\n\n\n\n\nCreating a pull request\n\nSee these instructions\nto open a pull request against the main GPT Index repo.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "doc_id": null, "embedding": null, "extra_info": {"file_path": "CONTRIBUTING.md", "file_name": "CONTRIBUTING.md"}, "index": 1, "child_indices": [], "ref_doc_id": "024b24be1818f09f3b9cd631d9a2a851df2b99ae", "node_info": null}, "2": {"text": "GPT Index is a Python package that allows users to contribute to its development. Contributions can include bug fixes, new features, and other tasks that are tracked in the Github Issues Page. To get started, users should fork the GPT Index repo, create a Python virtual environment, and install the required dependencies. Formatting/linting, testing, and creating an example notebook are all important steps to take before creating a pull request against the main GPT Index repo.", "doc_id": null, "embedding": null, "extra_info": null, "index": 2, "child_indices": [0, 1], "ref_doc_id": null, "node_info": null}}, "root_nodes": {"2": {"text": "GPT Index is a Python package that allows users to contribute to its development. Contributions can include bug fixes, new features, and other tasks that are tracked in the Github Issues Page. To get started, users should fork the GPT Index repo, create a Python virtual environment, and install the required dependencies. Formatting/linting, testing, and creating an example notebook are all important steps to take before creating a pull request against the main GPT Index repo.", "doc_id": null, "embedding": null, "extra_info": null, "index": 2, "child_indices": [0, 1], "ref_doc_id": null, "node_info": null}}, "__type__": "tree"}}}}