{"index_struct": {"text": "\nThe code file provides the necessary functions and classes to build and query GPT Index, a set of data structures designed to make it easier to use large external knowledge bases with LLMs (Language Models). It contains a toolkit of index data structures that can be queried in a general purpose manner to achieve tasks such as question-answering, summarization, text generation, and more. The code file includes functions and classes to build and query the index data structures, as well as save and load them from disk. It also includes algorithms and data structures to help reduce boilerplate code in LLM apps, and is supported by third-party packages such as tiktoken, openai, and langchain. The purpose of the code is to provide a way to access and use large external knowledge bases with LLMs, and to reduce the amount of code needed to do so.", "doc_id": "497a0c26-0fed-4e41-885b-5236e327ec13", "embedding": null, "extra_info": null, "all_nodes": {"0": {"text": "\n\n\ud83d\uddc2\ufe0f \ufe0fGPT Index\n\nGPT Index is a project consisting of a set of data structures designed to make it easier to \nuse large external knowledge bases with LLMs.\n\nPyPi: https://pypi.org/project/gpt-index/.\n\nDocumentation: https://gpt-index.readthedocs.io/en/latest/.\n\nTwitter: https://twitter.com/gpt_index.\n\nDiscord: https://discord.gg/dGcwcsnxhU.\n\n\n\n\n\n\ud83d\ude80 Overview\n\n**NOTE**: This README is not updated as frequently as the documentation. Please check out the documentation above for the latest updates!\n\n\n\n\n\nContext\n- LLMs are a phenomenonal piece of technology for knowledge generation and reasoning.\n- A big limitation of LLMs is context size (e.g. Davinci's limit is 4096 tokens. Large, but not infinite).\n- The ability to feed \"knowledge\" to LLMs is restricted to this limited prompt size and model weights.\n\n\n\n\n\nProposed Solution\n\nAt its core, GPT Index contains a toolkit of **index data structures** designed to easily connect LLM's with your external data.\nGPT Index helps to provide the following advantages:\n- Remove concerns over prompt size limitations.\n- Abstract common usage patterns to reduce boilerplate code in your LLM app.\n- Provide data connectors to your common data sources (Google Docs,", "doc_id": null, "embedding": null, "extra_info": {"file_path": "README.md", "file_name": "README.md"}, "index": 0, "child_indices": [], "ref_doc_id": "19e81e1976e5791f2485776a341f44f792881557", "node_info": null}, "1": {"text": "app.\n- Provide data connectors to your common data sources (Google Docs, Slack, etc.).\n- Provide cost transparency + tools that reduce cost while increasing performance.\n\n\nEach data structure offers distinct use cases and a variety of customizable parameters. These indices can then be \n*queried* in a general purpose manner, in order to achieve any task that you would typically achieve with an LLM:\n- Question-Answering\n- Summarization\n- Text Generation (Stories, TODO's, emails, etc.)\n- and more!\n\n\n\n\n\n\n\ud83d\udca1 Contributing\n\nInteresting in contributing? See our Contribution Guide for more details.\n\n\n\n\n\n\ud83d\udcc4 Documentation\n\nFull documentation can be found here: https://gpt-index.readthedocs.io/en/latest/. \n\nPlease check it out for the most up-to-date tutorials, how-to guides, references, and other resources! \n\n\n\n\n\n\n\ud83d\udcbb Example Usage\n\n```\npip install gpt-index\n```\n\nExamples are in the `examples` folder. Indices are in the `indices` folder (see list of indices below).\n\nTo build a simple vector store index:\n```python\nimport os\nos.environ[\"OPENAI_API_KEY\"] = 'YOUR_OPENAI_API_KEY'\n\nfrom gpt_index import GPTSimpleVectorIndex, SimpleDirectoryReader\ndocuments =", "doc_id": null, "embedding": null, "extra_info": {"file_path": "README.md", "file_name": "README.md"}, "index": 1, "child_indices": [], "ref_doc_id": "19e81e1976e5791f2485776a341f44f792881557", "node_info": null}, "2": {"text": "gpt_index import GPTSimpleVectorIndex, SimpleDirectoryReader\ndocuments = SimpleDirectoryReader('data').load_data()\nindex = GPTSimpleVectorIndex(documents)\n```\n\nTo save to and load from disk:\n```python\n\n\n\n\nsave to disk\nindex.save_to_disk('index.json')\n\n\n\n\nload from disk\nindex = GPTSimpleVectorIndex.load_from_disk('index.json')\n```\n\nTo query:\n```python\nindex.query(\"?\")\n```\n\n\n\n\n\n\ud83d\udd27 Dependencies\n\nThe main third-party package requirements are `tiktoken`, `openai`, and `langchain`.\n\nAll requirements should be contained within the `setup.py` file. To run the package locally without building the wheel, simply run `pip install -r requirements.txt`. \n\n\n\n\n\n\n\ud83d\udcd6 Citation\n\nReference to cite if you use GPT Index in a paper:\n\n```\n@software{Liu_GPT_Index_2022,\nauthor = {Liu, Jerry},\ndoi = {10.5281/zenodo.1234},\nmonth = {11},\ntitle = {{GPT Index}},\nurl = {https://github.com/jerryjliu/gpt_index},year = {2022}\n}\n```\n\n", "doc_id": null, "embedding": null, "extra_info": {"file_path": "README.md", "file_name": "README.md"}, "index": 2, "child_indices": [], "ref_doc_id": "19e81e1976e5791f2485776a341f44f792881557", "node_info": null}, "3": {"text": "GPT Index is a project consisting of a set of data structures designed to make it easier to use large external knowledge bases with LLMs. It provides data connectors to common data sources such as Google Docs, Slack, etc. and helps to remove concerns over prompt size limitations. It also abstracts common usage patterns to reduce boilerplate code in LLM apps. GPT Index contains a toolkit of index data structures that can be queried in a general purpose manner to achieve tasks such as question-answering, summarization, text generation, and more. It is supported by third-party packages such as tiktoken, openai, and langchain.", "doc_id": null, "embedding": null, "extra_info": null, "index": 3, "child_indices": [0, 1, 2], "ref_doc_id": null, "node_info": null}}, "root_nodes": {"3": {"text": "GPT Index is a project consisting of a set of data structures designed to make it easier to use large external knowledge bases with LLMs. It provides data connectors to common data sources such as Google Docs, Slack, etc. and helps to remove concerns over prompt size limitations. It also abstracts common usage patterns to reduce boilerplate code in LLM apps. GPT Index contains a toolkit of index data structures that can be queried in a general purpose manner to achieve tasks such as question-answering, summarization, text generation, and more. It is supported by third-party packages such as tiktoken, openai, and langchain.", "doc_id": null, "embedding": null, "extra_info": null, "index": 3, "child_indices": [0, 1, 2], "ref_doc_id": null, "node_info": null}}}, "docstore": {"docs": {"19e81e1976e5791f2485776a341f44f792881557": {"text": "\n\n\ud83d\uddc2\ufe0f \ufe0fGPT Index\n\nGPT Index is a project consisting of a set of data structures designed to make it easier to \nuse large external knowledge bases with LLMs.\n\nPyPi: https://pypi.org/project/gpt-index/.\n\nDocumentation: https://gpt-index.readthedocs.io/en/latest/.\n\nTwitter: https://twitter.com/gpt_index.\n\nDiscord: https://discord.gg/dGcwcsnxhU.\n\n\n\n\n\n\ud83d\ude80 Overview\n\n**NOTE**: This README is not updated as frequently as the documentation. Please check out the documentation above for the latest updates!\n\n\n\n\n\nContext\n- LLMs are a phenomenonal piece of technology for knowledge generation and reasoning.\n- A big limitation of LLMs is context size (e.g. Davinci's limit is 4096 tokens. Large, but not infinite).\n- The ability to feed \"knowledge\" to LLMs is restricted to this limited prompt size and model weights.\n\n\n\n\n\nProposed Solution\n\nAt its core, GPT Index contains a toolkit of **index data structures** designed to easily connect LLM's with your external data.\nGPT Index helps to provide the following advantages:\n- Remove concerns over prompt size limitations.\n- Abstract common usage patterns to reduce boilerplate code in your LLM app.\n- Provide data connectors to your common data sources (Google Docs, Slack, etc.).\n- Provide cost transparency + tools that reduce cost while increasing performance.\n\n\nEach data structure offers distinct use cases and a variety of customizable parameters. These indices can then be \n*queried* in a general purpose manner, in order to achieve any task that you would typically achieve with an LLM:\n- Question-Answering\n- Summarization\n- Text Generation (Stories, TODO's, emails, etc.)\n- and more!\n\n\n\n\n\n\n\ud83d\udca1 Contributing\n\nInteresting in contributing? See our Contribution Guide for more details.\n\n\n\n\n\n\ud83d\udcc4 Documentation\n\nFull documentation can be found here: https://gpt-index.readthedocs.io/en/latest/. \n\nPlease check it out for the most up-to-date tutorials, how-to guides, references, and other resources! \n\n\n\n\n\n\n\ud83d\udcbb Example Usage\n\n```\npip install gpt-index\n```\n\nExamples are in the `examples` folder. Indices are in the `indices` folder (see list of indices below).\n\nTo build a simple vector store index:\n```python\nimport os\nos.environ[\"OPENAI_API_KEY\"] = 'YOUR_OPENAI_API_KEY'\n\nfrom gpt_index import GPTSimpleVectorIndex, SimpleDirectoryReader\ndocuments = SimpleDirectoryReader('data').load_data()\nindex = GPTSimpleVectorIndex(documents)\n```\n\nTo save to and load from disk:\n```python\n\n\n\n\nsave to disk\nindex.save_to_disk('index.json')\n\n\n\n\nload from disk\nindex = GPTSimpleVectorIndex.load_from_disk('index.json')\n```\n\nTo query:\n```python\nindex.query(\"?\")\n```\n\n\n\n\n\n\ud83d\udd27 Dependencies\n\nThe main third-party package requirements are `tiktoken`, `openai`, and `langchain`.\n\nAll requirements should be contained within the `setup.py` file. To run the package locally without building the wheel, simply run `pip install -r requirements.txt`. \n\n\n\n\n\n\n\ud83d\udcd6 Citation\n\nReference to cite if you use GPT Index in a paper:\n\n```\n@software{Liu_GPT_Index_2022,\nauthor = {Liu, Jerry},\ndoi = {10.5281/zenodo.1234},\nmonth = {11},\ntitle = {{GPT Index}},\nurl = {https://github.com/jerryjliu/gpt_index},year = {2022}\n}\n```\n\n", "doc_id": "19e81e1976e5791f2485776a341f44f792881557", "embedding": null, "extra_info": {"file_path": "README.md", "file_name": "README.md"}, "__type__": "Document"}, "497a0c26-0fed-4e41-885b-5236e327ec13": {"text": "\nThe code file provides the necessary functions and classes to build and query GPT Index, a set of data structures designed to make it easier to use large external knowledge bases with LLMs (Language Models). It contains a toolkit of index data structures that can be queried in a general purpose manner to achieve tasks such as question-answering, summarization, text generation, and more. The code file includes functions and classes to build and query the index data structures, as well as save and load them from disk. It also includes algorithms and data structures to help reduce boilerplate code in LLM apps, and is supported by third-party packages such as tiktoken, openai, and langchain. The purpose of the code is to provide a way to access and use large external knowledge bases with LLMs, and to reduce the amount of code needed to do so.", "doc_id": "497a0c26-0fed-4e41-885b-5236e327ec13", "embedding": null, "extra_info": null, "all_nodes": {"0": {"text": "\n\n\ud83d\uddc2\ufe0f \ufe0fGPT Index\n\nGPT Index is a project consisting of a set of data structures designed to make it easier to \nuse large external knowledge bases with LLMs.\n\nPyPi: https://pypi.org/project/gpt-index/.\n\nDocumentation: https://gpt-index.readthedocs.io/en/latest/.\n\nTwitter: https://twitter.com/gpt_index.\n\nDiscord: https://discord.gg/dGcwcsnxhU.\n\n\n\n\n\n\ud83d\ude80 Overview\n\n**NOTE**: This README is not updated as frequently as the documentation. Please check out the documentation above for the latest updates!\n\n\n\n\n\nContext\n- LLMs are a phenomenonal piece of technology for knowledge generation and reasoning.\n- A big limitation of LLMs is context size (e.g. Davinci's limit is 4096 tokens. Large, but not infinite).\n- The ability to feed \"knowledge\" to LLMs is restricted to this limited prompt size and model weights.\n\n\n\n\n\nProposed Solution\n\nAt its core, GPT Index contains a toolkit of **index data structures** designed to easily connect LLM's with your external data.\nGPT Index helps to provide the following advantages:\n- Remove concerns over prompt size limitations.\n- Abstract common usage patterns to reduce boilerplate code in your LLM app.\n- Provide data connectors to your common data sources (Google Docs,", "doc_id": null, "embedding": null, "extra_info": {"file_path": "README.md", "file_name": "README.md"}, "index": 0, "child_indices": [], "ref_doc_id": "19e81e1976e5791f2485776a341f44f792881557", "node_info": null}, "1": {"text": "app.\n- Provide data connectors to your common data sources (Google Docs, Slack, etc.).\n- Provide cost transparency + tools that reduce cost while increasing performance.\n\n\nEach data structure offers distinct use cases and a variety of customizable parameters. These indices can then be \n*queried* in a general purpose manner, in order to achieve any task that you would typically achieve with an LLM:\n- Question-Answering\n- Summarization\n- Text Generation (Stories, TODO's, emails, etc.)\n- and more!\n\n\n\n\n\n\n\ud83d\udca1 Contributing\n\nInteresting in contributing? See our Contribution Guide for more details.\n\n\n\n\n\n\ud83d\udcc4 Documentation\n\nFull documentation can be found here: https://gpt-index.readthedocs.io/en/latest/. \n\nPlease check it out for the most up-to-date tutorials, how-to guides, references, and other resources! \n\n\n\n\n\n\n\ud83d\udcbb Example Usage\n\n```\npip install gpt-index\n```\n\nExamples are in the `examples` folder. Indices are in the `indices` folder (see list of indices below).\n\nTo build a simple vector store index:\n```python\nimport os\nos.environ[\"OPENAI_API_KEY\"] = 'YOUR_OPENAI_API_KEY'\n\nfrom gpt_index import GPTSimpleVectorIndex, SimpleDirectoryReader\ndocuments =", "doc_id": null, "embedding": null, "extra_info": {"file_path": "README.md", "file_name": "README.md"}, "index": 1, "child_indices": [], "ref_doc_id": "19e81e1976e5791f2485776a341f44f792881557", "node_info": null}, "2": {"text": "gpt_index import GPTSimpleVectorIndex, SimpleDirectoryReader\ndocuments = SimpleDirectoryReader('data').load_data()\nindex = GPTSimpleVectorIndex(documents)\n```\n\nTo save to and load from disk:\n```python\n\n\n\n\nsave to disk\nindex.save_to_disk('index.json')\n\n\n\n\nload from disk\nindex = GPTSimpleVectorIndex.load_from_disk('index.json')\n```\n\nTo query:\n```python\nindex.query(\"?\")\n```\n\n\n\n\n\n\ud83d\udd27 Dependencies\n\nThe main third-party package requirements are `tiktoken`, `openai`, and `langchain`.\n\nAll requirements should be contained within the `setup.py` file. To run the package locally without building the wheel, simply run `pip install -r requirements.txt`. \n\n\n\n\n\n\n\ud83d\udcd6 Citation\n\nReference to cite if you use GPT Index in a paper:\n\n```\n@software{Liu_GPT_Index_2022,\nauthor = {Liu, Jerry},\ndoi = {10.5281/zenodo.1234},\nmonth = {11},\ntitle = {{GPT Index}},\nurl = {https://github.com/jerryjliu/gpt_index},year = {2022}\n}\n```\n\n", "doc_id": null, "embedding": null, "extra_info": {"file_path": "README.md", "file_name": "README.md"}, "index": 2, "child_indices": [], "ref_doc_id": "19e81e1976e5791f2485776a341f44f792881557", "node_info": null}, "3": {"text": "GPT Index is a project consisting of a set of data structures designed to make it easier to use large external knowledge bases with LLMs. It provides data connectors to common data sources such as Google Docs, Slack, etc. and helps to remove concerns over prompt size limitations. It also abstracts common usage patterns to reduce boilerplate code in LLM apps. GPT Index contains a toolkit of index data structures that can be queried in a general purpose manner to achieve tasks such as question-answering, summarization, text generation, and more. It is supported by third-party packages such as tiktoken, openai, and langchain.", "doc_id": null, "embedding": null, "extra_info": null, "index": 3, "child_indices": [0, 1, 2], "ref_doc_id": null, "node_info": null}}, "root_nodes": {"3": {"text": "GPT Index is a project consisting of a set of data structures designed to make it easier to use large external knowledge bases with LLMs. It provides data connectors to common data sources such as Google Docs, Slack, etc. and helps to remove concerns over prompt size limitations. It also abstracts common usage patterns to reduce boilerplate code in LLM apps. GPT Index contains a toolkit of index data structures that can be queried in a general purpose manner to achieve tasks such as question-answering, summarization, text generation, and more. It is supported by third-party packages such as tiktoken, openai, and langchain.", "doc_id": null, "embedding": null, "extra_info": null, "index": 3, "child_indices": [0, 1, 2], "ref_doc_id": null, "node_info": null}}, "__type__": "tree"}}}}