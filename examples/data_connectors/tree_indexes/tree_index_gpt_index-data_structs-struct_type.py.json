{"index_struct": {"text": "\nThe IndexStructType class is an Enum used to identify different types of indices. It contains string values that represent the different types of indices, such as Tree, List, Keyword Table, Faiss Vector Store, Simple Vector Store, Weaviate Vector Store, Pinecone Vector Store, Qdrant Vector Store, and SQL Structured Store. These string values are used to identify the type of index when creating and accessing indices. The purpose of the IndexStructType class is to provide a consistent way to identify the type of index being used, allowing for easier access and manipulation of data. The class provides a unified way to identify the type of index, allowing for easier access and manipulation of data.", "doc_id": "89fe5fd8-15f3-4d5a-9c34-68ab8576e8f8", "embedding": null, "extra_info": null, "all_nodes": {"0": {"text": "\"\"\"IndexStructType class.\"\"\"\n\nfrom enum import Enum\n\n\nclass IndexStructType(str, Enum):\n    \"\"\"Index struct type. Identifier for a \"type\" of index.\n\n    Attributes:\n        TREE (\"tree\"): Tree index. See :ref:`Ref-Indices-Tree` for tree indices.\n        LIST (\"list\"): List index. See :ref:`Ref-Indices-List` for list indices.\n        KEYWORD_TABLE (\"keyword_table\"): Keyword table index. See\n            :ref:`Ref-Indices-Table`\n            for keyword table indices.\n        DICT (\"dict\"): Faiss Vector Store Index. See :ref:`Ref-Indices-VectorStore`\n            for more information on the Faiss vector store index.\n        SIMPLE_DICT (\"simple_dict\"): Simple Vector Store Index. See\n            :ref:`Ref-Indices-VectorStore`\n            for more information on the simple vector store index.\n        WEAVIATE (\"weaviate\"): Weaviate Vector Store Index.\n       ", "doc_id": null, "embedding": null, "extra_info": {"file_path": "gpt_index/data_structs/struct_type.py", "file_name": "struct_type.py"}, "index": 0, "child_indices": [], "ref_doc_id": "d75d8d1f3958884352e2c1148a6b9f1dd3e1f626", "node_info": null}, "1": {"text": "Weaviate Vector Store Index.\n            See :ref:`Ref-Indices-VectorStore`\n            for more information on the Weaviate vector store index.\n        PINECONE (\"pinecone\"): Pinecone Vector Store Index.\n            See :ref:`Ref-Indices-VectorStore`\n            for more information on the Pinecone vector store index.\n        QDRANT (\"qdrant\"): Qdrant Vector Store Index.\n            See :ref:`Ref-Indices-VectorStore`\n            for more information on the Qdrant vector store index.\n\n        SQL (\"SQL\"): SQL Structured Store Index.\n            See :ref:`Ref-Indices-StructStore`\n            for more information on the SQL vector store index.\n\n    \"\"\"\n\n    # TODO: refactor so these are properties on the base class\n\n    NODE = \"node\"\n    TREE = \"tree\"\n    LIST = \"list\"\n    KEYWORD_TABLE = \"keyword_table\"\n    # for Faiss\n ", "doc_id": null, "embedding": null, "extra_info": {"file_path": "gpt_index/data_structs/struct_type.py", "file_name": "struct_type.py"}, "index": 1, "child_indices": [], "ref_doc_id": "d75d8d1f3958884352e2c1148a6b9f1dd3e1f626", "node_info": null}, "2": {"text": "= \"keyword_table\"\n    # for Faiss\n    # TODO: rename\n    DICT = \"dict\"\n    # for simple embedding index\n    SIMPLE_DICT = \"simple_dict\"\n    # for weaviate index\n    WEAVIATE = \"weaviate\"\n    # for pinecone index\n    PINECONE = \"pinecone\"\n    # for qdrant index\n    QDRANT = \"qdrant\"\n    # for SQL index\n    SQL = \"sql\"\n", "doc_id": null, "embedding": null, "extra_info": {"file_path": "gpt_index/data_structs/struct_type.py", "file_name": "struct_type.py"}, "index": 2, "child_indices": [], "ref_doc_id": "d75d8d1f3958884352e2c1148a6b9f1dd3e1f626", "node_info": null}, "3": {"text": "This code file contains the IndexStructType class, which is an Enum used to identify different types of indices. The types of indices include Tree, List, Keyword Table, Faiss Vector Store, Simple Vector Store, Weaviate Vector Store, Pinecone Vector Store, Qdrant Vector Store, and SQL Structured Store. Each type of index is identified by a unique string value.\n\n\"\"\"", "doc_id": null, "embedding": null, "extra_info": null, "index": 3, "child_indices": [0, 1, 2], "ref_doc_id": null, "node_info": null}}, "root_nodes": {"3": {"text": "This code file contains the IndexStructType class, which is an Enum used to identify different types of indices. The types of indices include Tree, List, Keyword Table, Faiss Vector Store, Simple Vector Store, Weaviate Vector Store, Pinecone Vector Store, Qdrant Vector Store, and SQL Structured Store. Each type of index is identified by a unique string value.\n\n\"\"\"", "doc_id": null, "embedding": null, "extra_info": null, "index": 3, "child_indices": [0, 1, 2], "ref_doc_id": null, "node_info": null}}}, "docstore": {"docs": {"d75d8d1f3958884352e2c1148a6b9f1dd3e1f626": {"text": "\"\"\"IndexStructType class.\"\"\"\n\nfrom enum import Enum\n\n\nclass IndexStructType(str, Enum):\n    \"\"\"Index struct type. Identifier for a \"type\" of index.\n\n    Attributes:\n        TREE (\"tree\"): Tree index. See :ref:`Ref-Indices-Tree` for tree indices.\n        LIST (\"list\"): List index. See :ref:`Ref-Indices-List` for list indices.\n        KEYWORD_TABLE (\"keyword_table\"): Keyword table index. See\n            :ref:`Ref-Indices-Table`\n            for keyword table indices.\n        DICT (\"dict\"): Faiss Vector Store Index. See :ref:`Ref-Indices-VectorStore`\n            for more information on the Faiss vector store index.\n        SIMPLE_DICT (\"simple_dict\"): Simple Vector Store Index. See\n            :ref:`Ref-Indices-VectorStore`\n            for more information on the simple vector store index.\n        WEAVIATE (\"weaviate\"): Weaviate Vector Store Index.\n            See :ref:`Ref-Indices-VectorStore`\n            for more information on the Weaviate vector store index.\n        PINECONE (\"pinecone\"): Pinecone Vector Store Index.\n            See :ref:`Ref-Indices-VectorStore`\n            for more information on the Pinecone vector store index.\n        QDRANT (\"qdrant\"): Qdrant Vector Store Index.\n            See :ref:`Ref-Indices-VectorStore`\n            for more information on the Qdrant vector store index.\n\n        SQL (\"SQL\"): SQL Structured Store Index.\n            See :ref:`Ref-Indices-StructStore`\n            for more information on the SQL vector store index.\n\n    \"\"\"\n\n    # TODO: refactor so these are properties on the base class\n\n    NODE = \"node\"\n    TREE = \"tree\"\n    LIST = \"list\"\n    KEYWORD_TABLE = \"keyword_table\"\n    # for Faiss\n    # TODO: rename\n    DICT = \"dict\"\n    # for simple embedding index\n    SIMPLE_DICT = \"simple_dict\"\n    # for weaviate index\n    WEAVIATE = \"weaviate\"\n    # for pinecone index\n    PINECONE = \"pinecone\"\n    # for qdrant index\n    QDRANT = \"qdrant\"\n    # for SQL index\n    SQL = \"sql\"\n", "doc_id": "d75d8d1f3958884352e2c1148a6b9f1dd3e1f626", "embedding": null, "extra_info": {"file_path": "gpt_index/data_structs/struct_type.py", "file_name": "struct_type.py"}, "__type__": "Document"}, "89fe5fd8-15f3-4d5a-9c34-68ab8576e8f8": {"text": "\nThe IndexStructType class is an Enum used to identify different types of indices. It contains string values that represent the different types of indices, such as Tree, List, Keyword Table, Faiss Vector Store, Simple Vector Store, Weaviate Vector Store, Pinecone Vector Store, Qdrant Vector Store, and SQL Structured Store. These string values are used to identify the type of index when creating and accessing indices. The purpose of the IndexStructType class is to provide a consistent way to identify the type of index being used, allowing for easier access and manipulation of data. The class provides a unified way to identify the type of index, allowing for easier access and manipulation of data.", "doc_id": "89fe5fd8-15f3-4d5a-9c34-68ab8576e8f8", "embedding": null, "extra_info": null, "all_nodes": {"0": {"text": "\"\"\"IndexStructType class.\"\"\"\n\nfrom enum import Enum\n\n\nclass IndexStructType(str, Enum):\n    \"\"\"Index struct type. Identifier for a \"type\" of index.\n\n    Attributes:\n        TREE (\"tree\"): Tree index. See :ref:`Ref-Indices-Tree` for tree indices.\n        LIST (\"list\"): List index. See :ref:`Ref-Indices-List` for list indices.\n        KEYWORD_TABLE (\"keyword_table\"): Keyword table index. See\n            :ref:`Ref-Indices-Table`\n            for keyword table indices.\n        DICT (\"dict\"): Faiss Vector Store Index. See :ref:`Ref-Indices-VectorStore`\n            for more information on the Faiss vector store index.\n        SIMPLE_DICT (\"simple_dict\"): Simple Vector Store Index. See\n            :ref:`Ref-Indices-VectorStore`\n            for more information on the simple vector store index.\n        WEAVIATE (\"weaviate\"): Weaviate Vector Store Index.\n       ", "doc_id": null, "embedding": null, "extra_info": {"file_path": "gpt_index/data_structs/struct_type.py", "file_name": "struct_type.py"}, "index": 0, "child_indices": [], "ref_doc_id": "d75d8d1f3958884352e2c1148a6b9f1dd3e1f626", "node_info": null}, "1": {"text": "Weaviate Vector Store Index.\n            See :ref:`Ref-Indices-VectorStore`\n            for more information on the Weaviate vector store index.\n        PINECONE (\"pinecone\"): Pinecone Vector Store Index.\n            See :ref:`Ref-Indices-VectorStore`\n            for more information on the Pinecone vector store index.\n        QDRANT (\"qdrant\"): Qdrant Vector Store Index.\n            See :ref:`Ref-Indices-VectorStore`\n            for more information on the Qdrant vector store index.\n\n        SQL (\"SQL\"): SQL Structured Store Index.\n            See :ref:`Ref-Indices-StructStore`\n            for more information on the SQL vector store index.\n\n    \"\"\"\n\n    # TODO: refactor so these are properties on the base class\n\n    NODE = \"node\"\n    TREE = \"tree\"\n    LIST = \"list\"\n    KEYWORD_TABLE = \"keyword_table\"\n    # for Faiss\n ", "doc_id": null, "embedding": null, "extra_info": {"file_path": "gpt_index/data_structs/struct_type.py", "file_name": "struct_type.py"}, "index": 1, "child_indices": [], "ref_doc_id": "d75d8d1f3958884352e2c1148a6b9f1dd3e1f626", "node_info": null}, "2": {"text": "= \"keyword_table\"\n    # for Faiss\n    # TODO: rename\n    DICT = \"dict\"\n    # for simple embedding index\n    SIMPLE_DICT = \"simple_dict\"\n    # for weaviate index\n    WEAVIATE = \"weaviate\"\n    # for pinecone index\n    PINECONE = \"pinecone\"\n    # for qdrant index\n    QDRANT = \"qdrant\"\n    # for SQL index\n    SQL = \"sql\"\n", "doc_id": null, "embedding": null, "extra_info": {"file_path": "gpt_index/data_structs/struct_type.py", "file_name": "struct_type.py"}, "index": 2, "child_indices": [], "ref_doc_id": "d75d8d1f3958884352e2c1148a6b9f1dd3e1f626", "node_info": null}, "3": {"text": "This code file contains the IndexStructType class, which is an Enum used to identify different types of indices. The types of indices include Tree, List, Keyword Table, Faiss Vector Store, Simple Vector Store, Weaviate Vector Store, Pinecone Vector Store, Qdrant Vector Store, and SQL Structured Store. Each type of index is identified by a unique string value.\n\n\"\"\"", "doc_id": null, "embedding": null, "extra_info": null, "index": 3, "child_indices": [0, 1, 2], "ref_doc_id": null, "node_info": null}}, "root_nodes": {"3": {"text": "This code file contains the IndexStructType class, which is an Enum used to identify different types of indices. The types of indices include Tree, List, Keyword Table, Faiss Vector Store, Simple Vector Store, Weaviate Vector Store, Pinecone Vector Store, Qdrant Vector Store, and SQL Structured Store. Each type of index is identified by a unique string value.\n\n\"\"\"", "doc_id": null, "embedding": null, "extra_info": null, "index": 3, "child_indices": [0, 1, 2], "ref_doc_id": null, "node_info": null}}, "__type__": "tree"}}}}