{"index_struct": {"text": "\nLangchainEmbedding is a module that provides external embeddings for GPT-Index using Langchain's embeddings class, LCEmbeddings. It contains two functions, _get_query_embedding and _get_text_embedding, which use the LCEmbeddings class to embed queries and text respectively. The module also inherits from the BaseEmbedding class, allowing it to access the data structures and algorithms of the parent class. This allows the module to quickly and easily embed queries and text for GPT-Index. The purpose of the module is to provide an easy way to use external embeddings for GPT-Index, allowing users to quickly and easily embed queries and text.", "doc_id": "8f149732-d45b-44f2-8305-fb98d955a452", "embedding": null, "extra_info": null, "all_nodes": {"0": {"text": "\"\"\"Langchain Embedding Wrapper Module.\"\"\"\n\n\nfrom typing import List\n\nfrom langchain.embeddings.base import Embeddings as LCEmbeddings\n\nfrom gpt_index.embeddings.base import BaseEmbedding\n\n\nclass LangchainEmbedding(BaseEmbedding):\n    \"\"\"External embeddings (taken from Langchain).\n\n    Args:\n        langchain_embedding (langchain.embeddings.Embeddings): Langchain\n            embeddings class.\n    \"\"\"\n\n    def __init__(self, langchain_embedding: LCEmbeddings) -> None:\n        \"\"\"Init params.\"\"\"\n        super().__init__()\n        self._langchain_embedding = langchain_embedding\n\n    def _get_query_embedding(self, query: str) -> List[float]:\n        \"\"\"Get query embedding.\"\"\"\n        return self._langchain_embedding.embed_query(query)\n\n    def _get_text_embedding(self, text: str) -> List[float]:\n        \"\"\"Get text embedding.\"\"\"\n        return self._langchain_embedding.embed_documents([text])[0]\n", "doc_id": null, "embedding": null, "extra_info": {"file_path": "gpt_index/embeddings/langchain.py", "file_name": "langchain.py"}, "index": 0, "child_indices": [], "ref_doc_id": "8b01c1a38fd076f3f050d480e1a614de889880a0", "node_info": null}, "1": {"text": "LangchainEmbedding is a module that wraps Langchain's embeddings class, LCEmbeddings, to provide external embeddings for GPT-Index. It contains two functions, _get_query_embedding and _get_text_embedding, which use the LCEmbeddings class to embed queries and text respectively. The module also inherits from the BaseEmbedding class.\n", "doc_id": null, "embedding": null, "extra_info": null, "index": 1, "child_indices": [0], "ref_doc_id": null, "node_info": null}}, "root_nodes": {"1": {"text": "LangchainEmbedding is a module that wraps Langchain's embeddings class, LCEmbeddings, to provide external embeddings for GPT-Index. It contains two functions, _get_query_embedding and _get_text_embedding, which use the LCEmbeddings class to embed queries and text respectively. The module also inherits from the BaseEmbedding class.\n", "doc_id": null, "embedding": null, "extra_info": null, "index": 1, "child_indices": [0], "ref_doc_id": null, "node_info": null}}}, "docstore": {"docs": {"8b01c1a38fd076f3f050d480e1a614de889880a0": {"text": "\"\"\"Langchain Embedding Wrapper Module.\"\"\"\n\n\nfrom typing import List\n\nfrom langchain.embeddings.base import Embeddings as LCEmbeddings\n\nfrom gpt_index.embeddings.base import BaseEmbedding\n\n\nclass LangchainEmbedding(BaseEmbedding):\n    \"\"\"External embeddings (taken from Langchain).\n\n    Args:\n        langchain_embedding (langchain.embeddings.Embeddings): Langchain\n            embeddings class.\n    \"\"\"\n\n    def __init__(self, langchain_embedding: LCEmbeddings) -> None:\n        \"\"\"Init params.\"\"\"\n        super().__init__()\n        self._langchain_embedding = langchain_embedding\n\n    def _get_query_embedding(self, query: str) -> List[float]:\n        \"\"\"Get query embedding.\"\"\"\n        return self._langchain_embedding.embed_query(query)\n\n    def _get_text_embedding(self, text: str) -> List[float]:\n        \"\"\"Get text embedding.\"\"\"\n        return self._langchain_embedding.embed_documents([text])[0]\n", "doc_id": "8b01c1a38fd076f3f050d480e1a614de889880a0", "embedding": null, "extra_info": {"file_path": "gpt_index/embeddings/langchain.py", "file_name": "langchain.py"}, "__type__": "Document"}, "8f149732-d45b-44f2-8305-fb98d955a452": {"text": "\nLangchainEmbedding is a module that provides external embeddings for GPT-Index using Langchain's embeddings class, LCEmbeddings. It contains two functions, _get_query_embedding and _get_text_embedding, which use the LCEmbeddings class to embed queries and text respectively. The module also inherits from the BaseEmbedding class, allowing it to access the data structures and algorithms of the parent class. This allows the module to quickly and easily embed queries and text for GPT-Index. The purpose of the module is to provide an easy way to use external embeddings for GPT-Index, allowing users to quickly and easily embed queries and text.", "doc_id": "8f149732-d45b-44f2-8305-fb98d955a452", "embedding": null, "extra_info": null, "all_nodes": {"0": {"text": "\"\"\"Langchain Embedding Wrapper Module.\"\"\"\n\n\nfrom typing import List\n\nfrom langchain.embeddings.base import Embeddings as LCEmbeddings\n\nfrom gpt_index.embeddings.base import BaseEmbedding\n\n\nclass LangchainEmbedding(BaseEmbedding):\n    \"\"\"External embeddings (taken from Langchain).\n\n    Args:\n        langchain_embedding (langchain.embeddings.Embeddings): Langchain\n            embeddings class.\n    \"\"\"\n\n    def __init__(self, langchain_embedding: LCEmbeddings) -> None:\n        \"\"\"Init params.\"\"\"\n        super().__init__()\n        self._langchain_embedding = langchain_embedding\n\n    def _get_query_embedding(self, query: str) -> List[float]:\n        \"\"\"Get query embedding.\"\"\"\n        return self._langchain_embedding.embed_query(query)\n\n    def _get_text_embedding(self, text: str) -> List[float]:\n        \"\"\"Get text embedding.\"\"\"\n        return self._langchain_embedding.embed_documents([text])[0]\n", "doc_id": null, "embedding": null, "extra_info": {"file_path": "gpt_index/embeddings/langchain.py", "file_name": "langchain.py"}, "index": 0, "child_indices": [], "ref_doc_id": "8b01c1a38fd076f3f050d480e1a614de889880a0", "node_info": null}, "1": {"text": "LangchainEmbedding is a module that wraps Langchain's embeddings class, LCEmbeddings, to provide external embeddings for GPT-Index. It contains two functions, _get_query_embedding and _get_text_embedding, which use the LCEmbeddings class to embed queries and text respectively. The module also inherits from the BaseEmbedding class.\n", "doc_id": null, "embedding": null, "extra_info": null, "index": 1, "child_indices": [0], "ref_doc_id": null, "node_info": null}}, "root_nodes": {"1": {"text": "LangchainEmbedding is a module that wraps Langchain's embeddings class, LCEmbeddings, to provide external embeddings for GPT-Index. It contains two functions, _get_query_embedding and _get_text_embedding, which use the LCEmbeddings class to embed queries and text respectively. The module also inherits from the BaseEmbedding class.\n", "doc_id": null, "embedding": null, "extra_info": null, "index": 1, "child_indices": [0], "ref_doc_id": null, "node_info": null}}, "__type__": "tree"}}}}