{"index_struct": {"text": "\nThis code file defines an Enum class called PromptType, which provides a way to store and access different types of prompts in a consistent and organized manner. The types of prompts include summarization, tree insert node, tree select query, question-answer, refine, keyword extract, query keyword extract, schema extract, text to SQL, table context, and custom. The Enum class ensures that only valid prompt types are used, and provides an easy way to access the different types of prompts. This code allows for efficient storage and retrieval of prompt types, making it easier to use and manage.", "doc_id": "5fbf5dc6-d9fe-4e52-8f8c-d4b1023da30e", "embedding": null, "extra_info": null, "all_nodes": {"0": {"text": "\"\"\"Prompt types enum.\"\"\"\n\nfrom enum import Enum\n\n\nclass PromptType(str, Enum):\n    \"\"\"Prompt type.\"\"\"\n\n    # summarization\n    SUMMARY = \"summary\"\n    # tree insert node\n    TREE_INSERT = \"insert\"\n    # tree select query prompt\n    TREE_SELECT = \"tree_select\"\n    # tree select query prompt (multiple)\n    TREE_SELECT_MULTIPLE = \"tree_select_multiple\"\n    # question-answer\n    QUESTION_ANSWER = \"text_qa\"\n    # refine\n    REFINE = \"refine\"\n    # keyword extract\n    KEYWORD_EXTRACT = \"keyword_extract\"\n    # query keyword extract\n    QUERY_KEYWORD_EXTRACT = \"query_keyword_extract\"\n\n    # schema extract\n    SCHEMA_EXTRACT = \"schema_extract\"\n\n    # text to sql\n    TEXT_TO_SQL = \"text_to_sql\"\n\n    # table context\n    TABLE_CONTEXT = \"table_context\"\n\n    # custom (by default)\n    CUSTOM = \"custom\"\n", "doc_id": null, "embedding": null, "extra_info": {"file_path": "gpt_index/prompts/prompt_type.py", "file_name": "prompt_type.py"}, "index": 0, "child_indices": [], "ref_doc_id": "6733ae7741e49b480a7fa692ec545ff3edec1a13", "node_info": null}, "1": {"text": "This code file defines an Enum class called PromptType, which is used to store different types of prompts. The types of prompts include summarization, tree insert node, tree select query, question-answer, refine, keyword extract, query keyword extract, schema extract, text to SQL, table context, and custom.\n\n\"\"\"", "doc_id": null, "embedding": null, "extra_info": null, "index": 1, "child_indices": [0], "ref_doc_id": null, "node_info": null}}, "root_nodes": {"1": {"text": "This code file defines an Enum class called PromptType, which is used to store different types of prompts. The types of prompts include summarization, tree insert node, tree select query, question-answer, refine, keyword extract, query keyword extract, schema extract, text to SQL, table context, and custom.\n\n\"\"\"", "doc_id": null, "embedding": null, "extra_info": null, "index": 1, "child_indices": [0], "ref_doc_id": null, "node_info": null}}}, "docstore": {"docs": {"6733ae7741e49b480a7fa692ec545ff3edec1a13": {"text": "\"\"\"Prompt types enum.\"\"\"\n\nfrom enum import Enum\n\n\nclass PromptType(str, Enum):\n    \"\"\"Prompt type.\"\"\"\n\n    # summarization\n    SUMMARY = \"summary\"\n    # tree insert node\n    TREE_INSERT = \"insert\"\n    # tree select query prompt\n    TREE_SELECT = \"tree_select\"\n    # tree select query prompt (multiple)\n    TREE_SELECT_MULTIPLE = \"tree_select_multiple\"\n    # question-answer\n    QUESTION_ANSWER = \"text_qa\"\n    # refine\n    REFINE = \"refine\"\n    # keyword extract\n    KEYWORD_EXTRACT = \"keyword_extract\"\n    # query keyword extract\n    QUERY_KEYWORD_EXTRACT = \"query_keyword_extract\"\n\n    # schema extract\n    SCHEMA_EXTRACT = \"schema_extract\"\n\n    # text to sql\n    TEXT_TO_SQL = \"text_to_sql\"\n\n    # table context\n    TABLE_CONTEXT = \"table_context\"\n\n    # custom (by default)\n    CUSTOM = \"custom\"\n", "doc_id": "6733ae7741e49b480a7fa692ec545ff3edec1a13", "embedding": null, "extra_info": {"file_path": "gpt_index/prompts/prompt_type.py", "file_name": "prompt_type.py"}, "__type__": "Document"}, "5fbf5dc6-d9fe-4e52-8f8c-d4b1023da30e": {"text": "\nThis code file defines an Enum class called PromptType, which provides a way to store and access different types of prompts in a consistent and organized manner. The types of prompts include summarization, tree insert node, tree select query, question-answer, refine, keyword extract, query keyword extract, schema extract, text to SQL, table context, and custom. The Enum class ensures that only valid prompt types are used, and provides an easy way to access the different types of prompts. This code allows for efficient storage and retrieval of prompt types, making it easier to use and manage.", "doc_id": "5fbf5dc6-d9fe-4e52-8f8c-d4b1023da30e", "embedding": null, "extra_info": null, "all_nodes": {"0": {"text": "\"\"\"Prompt types enum.\"\"\"\n\nfrom enum import Enum\n\n\nclass PromptType(str, Enum):\n    \"\"\"Prompt type.\"\"\"\n\n    # summarization\n    SUMMARY = \"summary\"\n    # tree insert node\n    TREE_INSERT = \"insert\"\n    # tree select query prompt\n    TREE_SELECT = \"tree_select\"\n    # tree select query prompt (multiple)\n    TREE_SELECT_MULTIPLE = \"tree_select_multiple\"\n    # question-answer\n    QUESTION_ANSWER = \"text_qa\"\n    # refine\n    REFINE = \"refine\"\n    # keyword extract\n    KEYWORD_EXTRACT = \"keyword_extract\"\n    # query keyword extract\n    QUERY_KEYWORD_EXTRACT = \"query_keyword_extract\"\n\n    # schema extract\n    SCHEMA_EXTRACT = \"schema_extract\"\n\n    # text to sql\n    TEXT_TO_SQL = \"text_to_sql\"\n\n    # table context\n    TABLE_CONTEXT = \"table_context\"\n\n    # custom (by default)\n    CUSTOM = \"custom\"\n", "doc_id": null, "embedding": null, "extra_info": {"file_path": "gpt_index/prompts/prompt_type.py", "file_name": "prompt_type.py"}, "index": 0, "child_indices": [], "ref_doc_id": "6733ae7741e49b480a7fa692ec545ff3edec1a13", "node_info": null}, "1": {"text": "This code file defines an Enum class called PromptType, which is used to store different types of prompts. The types of prompts include summarization, tree insert node, tree select query, question-answer, refine, keyword extract, query keyword extract, schema extract, text to SQL, table context, and custom.\n\n\"\"\"", "doc_id": null, "embedding": null, "extra_info": null, "index": 1, "child_indices": [0], "ref_doc_id": null, "node_info": null}}, "root_nodes": {"1": {"text": "This code file defines an Enum class called PromptType, which is used to store different types of prompts. The types of prompts include summarization, tree insert node, tree select query, question-answer, refine, keyword extract, query keyword extract, schema extract, text to SQL, table context, and custom.\n\n\"\"\"", "doc_id": null, "embedding": null, "extra_info": null, "index": 1, "child_indices": [0], "ref_doc_id": null, "node_info": null}}, "__type__": "tree"}}}}