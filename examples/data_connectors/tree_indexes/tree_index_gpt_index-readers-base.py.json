{"index_struct": {"text": "\nThe BaseReader class provides a base for readers to use when loading data from a directory. It contains two methods: load_data and load_langchain_documents. The load_data method is an abstract method that takes in any number of arguments and keyword arguments and returns a list of Documents. The load_langchain_documents method takes in keyword arguments and returns a list of LangChain documents. The purpose of this code is to provide a way to easily convert data from a directory into the LangChain document format.", "doc_id": "35358bfa-8b25-4f2c-bc91-22cac3965f00", "embedding": null, "extra_info": null, "all_nodes": {"0": {"text": "\"\"\"Base reader class.\"\"\"\nfrom abc import abstractmethod\nfrom typing import Any, List\n\nfrom langchain.docstore.document import Document as LCDocument\n\nfrom gpt_index.readers.schema.base import Document\n\n\nclass BaseReader:\n    \"\"\"Utilities for loading data from a directory.\"\"\"\n\n    @abstractmethod\n    def load_data(self, *args: Any, **load_kwargs: Any) -> List[Document]:\n        \"\"\"Load data from the input directory.\"\"\"\n\n    def load_langchain_documents(self, **load_kwargs: Any) -> List[LCDocument]:\n        \"\"\"Load data in LangChain document format.\"\"\"\n        docs = self.load_data(**load_kwargs)\n        return [d.to_langchain_format() for d in docs]\n", "doc_id": null, "embedding": null, "extra_info": {"file_path": "gpt_index/readers/base.py", "file_name": "base.py"}, "index": 0, "child_indices": [], "ref_doc_id": "f5cc30de3365fe4a08a28f1e95a9bdd2b17e09a0", "node_info": null}, "1": {"text": "Base.py is a file containing the BaseReader class, which provides utilities for loading data from a directory. It contains two methods: load_data and load_langchain_documents. The load_data method is an abstract method that takes in any number of arguments and keyword arguments and returns a list of Documents. The load_langchain_documents method takes in keyword arguments and returns a list of LangChain documents. The purpose of this code is to provide a base class for readers to use when loading data from a directory.", "doc_id": null, "embedding": null, "extra_info": null, "index": 1, "child_indices": [0], "ref_doc_id": null, "node_info": null}}, "root_nodes": {"1": {"text": "Base.py is a file containing the BaseReader class, which provides utilities for loading data from a directory. It contains two methods: load_data and load_langchain_documents. The load_data method is an abstract method that takes in any number of arguments and keyword arguments and returns a list of Documents. The load_langchain_documents method takes in keyword arguments and returns a list of LangChain documents. The purpose of this code is to provide a base class for readers to use when loading data from a directory.", "doc_id": null, "embedding": null, "extra_info": null, "index": 1, "child_indices": [0], "ref_doc_id": null, "node_info": null}}}, "docstore": {"docs": {"f5cc30de3365fe4a08a28f1e95a9bdd2b17e09a0": {"text": "\"\"\"Base reader class.\"\"\"\nfrom abc import abstractmethod\nfrom typing import Any, List\n\nfrom langchain.docstore.document import Document as LCDocument\n\nfrom gpt_index.readers.schema.base import Document\n\n\nclass BaseReader:\n    \"\"\"Utilities for loading data from a directory.\"\"\"\n\n    @abstractmethod\n    def load_data(self, *args: Any, **load_kwargs: Any) -> List[Document]:\n        \"\"\"Load data from the input directory.\"\"\"\n\n    def load_langchain_documents(self, **load_kwargs: Any) -> List[LCDocument]:\n        \"\"\"Load data in LangChain document format.\"\"\"\n        docs = self.load_data(**load_kwargs)\n        return [d.to_langchain_format() for d in docs]\n", "doc_id": "f5cc30de3365fe4a08a28f1e95a9bdd2b17e09a0", "embedding": null, "extra_info": {"file_path": "gpt_index/readers/base.py", "file_name": "base.py"}, "__type__": "Document"}, "35358bfa-8b25-4f2c-bc91-22cac3965f00": {"text": "\nThe BaseReader class provides a base for readers to use when loading data from a directory. It contains two methods: load_data and load_langchain_documents. The load_data method is an abstract method that takes in any number of arguments and keyword arguments and returns a list of Documents. The load_langchain_documents method takes in keyword arguments and returns a list of LangChain documents. The purpose of this code is to provide a way to easily convert data from a directory into the LangChain document format.", "doc_id": "35358bfa-8b25-4f2c-bc91-22cac3965f00", "embedding": null, "extra_info": null, "all_nodes": {"0": {"text": "\"\"\"Base reader class.\"\"\"\nfrom abc import abstractmethod\nfrom typing import Any, List\n\nfrom langchain.docstore.document import Document as LCDocument\n\nfrom gpt_index.readers.schema.base import Document\n\n\nclass BaseReader:\n    \"\"\"Utilities for loading data from a directory.\"\"\"\n\n    @abstractmethod\n    def load_data(self, *args: Any, **load_kwargs: Any) -> List[Document]:\n        \"\"\"Load data from the input directory.\"\"\"\n\n    def load_langchain_documents(self, **load_kwargs: Any) -> List[LCDocument]:\n        \"\"\"Load data in LangChain document format.\"\"\"\n        docs = self.load_data(**load_kwargs)\n        return [d.to_langchain_format() for d in docs]\n", "doc_id": null, "embedding": null, "extra_info": {"file_path": "gpt_index/readers/base.py", "file_name": "base.py"}, "index": 0, "child_indices": [], "ref_doc_id": "f5cc30de3365fe4a08a28f1e95a9bdd2b17e09a0", "node_info": null}, "1": {"text": "Base.py is a file containing the BaseReader class, which provides utilities for loading data from a directory. It contains two methods: load_data and load_langchain_documents. The load_data method is an abstract method that takes in any number of arguments and keyword arguments and returns a list of Documents. The load_langchain_documents method takes in keyword arguments and returns a list of LangChain documents. The purpose of this code is to provide a base class for readers to use when loading data from a directory.", "doc_id": null, "embedding": null, "extra_info": null, "index": 1, "child_indices": [0], "ref_doc_id": null, "node_info": null}}, "root_nodes": {"1": {"text": "Base.py is a file containing the BaseReader class, which provides utilities for loading data from a directory. It contains two methods: load_data and load_langchain_documents. The load_data method is an abstract method that takes in any number of arguments and keyword arguments and returns a list of Documents. The load_langchain_documents method takes in keyword arguments and returns a list of LangChain documents. The purpose of this code is to provide a base class for readers to use when loading data from a directory.", "doc_id": null, "embedding": null, "extra_info": null, "index": 1, "child_indices": [0], "ref_doc_id": null, "node_info": null}}, "__type__": "tree"}}}}