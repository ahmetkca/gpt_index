{"index_struct": {"text": "\nMongo.py is a code file that contains the SimpleMongoReader class, which is used to read data from a Mongo database. It takes in a host, port, and maximum number of documents to load as parameters. The load_data() function is used to query the database and return a list of documents. The documents are then concatenated into a Document object used by GPT Index. The SimpleMongoReader class is used to read data from a Mongo database and store it in a Document object. The purpose of the code is to provide an easy way to read data from a Mongo database and store it in a Document object for use with GPT Index.", "doc_id": "26135dee-b802-4de8-98b7-41244debdd71", "embedding": null, "extra_info": null, "all_nodes": {"0": {"text": "\"\"\"Mongo client.\"\"\"\n\nfrom typing import Dict, List, Optional\n\nfrom gpt_index.readers.base import BaseReader\nfrom gpt_index.readers.schema.base import Document\n\n\nclass SimpleMongoReader(BaseReader):\n    \"\"\"Simple mongo reader.\n\n    Concatenates each Mongo doc into Document used by GPT Index.\n\n    Args:\n        host (str): Mongo host.\n        port (int): Mongo port.\n        max_docs (int): Maximum number of documents to load.\n\n    \"\"\"\n\n    def __init__(self, host: str, port: int, max_docs: int = 1000) -> None:\n        \"\"\"Initialize with parameters.\"\"\"\n        try:\n            import pymongo  # noqa: F401\n            from pymongo import MongoClient  # noqa: F401\n        except ImportError:\n            raise ValueError(\n                \"`pymongo` package not found, please run `pip install pymongo`\"\n            )\n       ", "doc_id": null, "embedding": null, "extra_info": {"file_path": "gpt_index/readers/mongo.py", "file_name": "mongo.py"}, "index": 0, "child_indices": [], "ref_doc_id": "2bc13de0428fd82ed9d665fc257405cf2de8929a", "node_info": null}, "1": {"text": "           )\n        self.client: MongoClient = MongoClient(host, port)\n        self.max_docs = max_docs\n\n    def load_data(\n        self, db_name: str, collection_name: str, query_dict: Optional[Dict] = None\n    ) -> List[Document]:\n        \"\"\"Load data from the input directory.\n\n        Args:\n            db_name (str): name of the database.\n            collection_name (str): name of the collection.\n            query_dict (Optional[Dict]): query to filter documents.\n                Defaults to None\n\n        Returns:\n            List[Document]: A list of documents.\n\n        \"\"\"\n        documents = []\n        db = self.client[db_name]\n        if query_dict is None:\n            cursor = db[collection_name].find()\n        else:\n     ", "doc_id": null, "embedding": null, "extra_info": {"file_path": "gpt_index/readers/mongo.py", "file_name": "mongo.py"}, "index": 1, "child_indices": [], "ref_doc_id": "2bc13de0428fd82ed9d665fc257405cf2de8929a", "node_info": null}, "2": {"text": "       else:\n            cursor = db[collection_name].find(query_dict)\n\n        for item in cursor:\n            if \"text\" not in item:\n                raise ValueError(\"`text` field not found in Mongo document.\")\n            documents.append(Document(item[\"text\"]))\n        return documents\n", "doc_id": null, "embedding": null, "extra_info": {"file_path": "gpt_index/readers/mongo.py", "file_name": "mongo.py"}, "index": 2, "child_indices": [], "ref_doc_id": "2bc13de0428fd82ed9d665fc257405cf2de8929a", "node_info": null}, "3": {"text": "Mongo.py is a file that contains the SimpleMongoReader class, which is used to read data from a Mongo database. It takes in a host, port, and maximum number of documents to load as parameters. The load_data() function is used to load data from the database, and it takes in a database name, collection name, and an optional query dictionary as parameters. It then concatenates each Mongo document into a Document object used by GPT Index, and returns a list of documents. \n\"\"\"", "doc_id": null, "embedding": null, "extra_info": null, "index": 3, "child_indices": [0, 1, 2], "ref_doc_id": null, "node_info": null}}, "root_nodes": {"3": {"text": "Mongo.py is a file that contains the SimpleMongoReader class, which is used to read data from a Mongo database. It takes in a host, port, and maximum number of documents to load as parameters. The load_data() function is used to load data from the database, and it takes in a database name, collection name, and an optional query dictionary as parameters. It then concatenates each Mongo document into a Document object used by GPT Index, and returns a list of documents. \n\"\"\"", "doc_id": null, "embedding": null, "extra_info": null, "index": 3, "child_indices": [0, 1, 2], "ref_doc_id": null, "node_info": null}}}, "docstore": {"docs": {"2bc13de0428fd82ed9d665fc257405cf2de8929a": {"text": "\"\"\"Mongo client.\"\"\"\n\nfrom typing import Dict, List, Optional\n\nfrom gpt_index.readers.base import BaseReader\nfrom gpt_index.readers.schema.base import Document\n\n\nclass SimpleMongoReader(BaseReader):\n    \"\"\"Simple mongo reader.\n\n    Concatenates each Mongo doc into Document used by GPT Index.\n\n    Args:\n        host (str): Mongo host.\n        port (int): Mongo port.\n        max_docs (int): Maximum number of documents to load.\n\n    \"\"\"\n\n    def __init__(self, host: str, port: int, max_docs: int = 1000) -> None:\n        \"\"\"Initialize with parameters.\"\"\"\n        try:\n            import pymongo  # noqa: F401\n            from pymongo import MongoClient  # noqa: F401\n        except ImportError:\n            raise ValueError(\n                \"`pymongo` package not found, please run `pip install pymongo`\"\n            )\n        self.client: MongoClient = MongoClient(host, port)\n        self.max_docs = max_docs\n\n    def load_data(\n        self, db_name: str, collection_name: str, query_dict: Optional[Dict] = None\n    ) -> List[Document]:\n        \"\"\"Load data from the input directory.\n\n        Args:\n            db_name (str): name of the database.\n            collection_name (str): name of the collection.\n            query_dict (Optional[Dict]): query to filter documents.\n                Defaults to None\n\n        Returns:\n            List[Document]: A list of documents.\n\n        \"\"\"\n        documents = []\n        db = self.client[db_name]\n        if query_dict is None:\n            cursor = db[collection_name].find()\n        else:\n            cursor = db[collection_name].find(query_dict)\n\n        for item in cursor:\n            if \"text\" not in item:\n                raise ValueError(\"`text` field not found in Mongo document.\")\n            documents.append(Document(item[\"text\"]))\n        return documents\n", "doc_id": "2bc13de0428fd82ed9d665fc257405cf2de8929a", "embedding": null, "extra_info": {"file_path": "gpt_index/readers/mongo.py", "file_name": "mongo.py"}, "__type__": "Document"}, "26135dee-b802-4de8-98b7-41244debdd71": {"text": "\nMongo.py is a code file that contains the SimpleMongoReader class, which is used to read data from a Mongo database. It takes in a host, port, and maximum number of documents to load as parameters. The load_data() function is used to query the database and return a list of documents. The documents are then concatenated into a Document object used by GPT Index. The SimpleMongoReader class is used to read data from a Mongo database and store it in a Document object. The purpose of the code is to provide an easy way to read data from a Mongo database and store it in a Document object for use with GPT Index.", "doc_id": "26135dee-b802-4de8-98b7-41244debdd71", "embedding": null, "extra_info": null, "all_nodes": {"0": {"text": "\"\"\"Mongo client.\"\"\"\n\nfrom typing import Dict, List, Optional\n\nfrom gpt_index.readers.base import BaseReader\nfrom gpt_index.readers.schema.base import Document\n\n\nclass SimpleMongoReader(BaseReader):\n    \"\"\"Simple mongo reader.\n\n    Concatenates each Mongo doc into Document used by GPT Index.\n\n    Args:\n        host (str): Mongo host.\n        port (int): Mongo port.\n        max_docs (int): Maximum number of documents to load.\n\n    \"\"\"\n\n    def __init__(self, host: str, port: int, max_docs: int = 1000) -> None:\n        \"\"\"Initialize with parameters.\"\"\"\n        try:\n            import pymongo  # noqa: F401\n            from pymongo import MongoClient  # noqa: F401\n        except ImportError:\n            raise ValueError(\n                \"`pymongo` package not found, please run `pip install pymongo`\"\n            )\n       ", "doc_id": null, "embedding": null, "extra_info": {"file_path": "gpt_index/readers/mongo.py", "file_name": "mongo.py"}, "index": 0, "child_indices": [], "ref_doc_id": "2bc13de0428fd82ed9d665fc257405cf2de8929a", "node_info": null}, "1": {"text": "           )\n        self.client: MongoClient = MongoClient(host, port)\n        self.max_docs = max_docs\n\n    def load_data(\n        self, db_name: str, collection_name: str, query_dict: Optional[Dict] = None\n    ) -> List[Document]:\n        \"\"\"Load data from the input directory.\n\n        Args:\n            db_name (str): name of the database.\n            collection_name (str): name of the collection.\n            query_dict (Optional[Dict]): query to filter documents.\n                Defaults to None\n\n        Returns:\n            List[Document]: A list of documents.\n\n        \"\"\"\n        documents = []\n        db = self.client[db_name]\n        if query_dict is None:\n            cursor = db[collection_name].find()\n        else:\n     ", "doc_id": null, "embedding": null, "extra_info": {"file_path": "gpt_index/readers/mongo.py", "file_name": "mongo.py"}, "index": 1, "child_indices": [], "ref_doc_id": "2bc13de0428fd82ed9d665fc257405cf2de8929a", "node_info": null}, "2": {"text": "       else:\n            cursor = db[collection_name].find(query_dict)\n\n        for item in cursor:\n            if \"text\" not in item:\n                raise ValueError(\"`text` field not found in Mongo document.\")\n            documents.append(Document(item[\"text\"]))\n        return documents\n", "doc_id": null, "embedding": null, "extra_info": {"file_path": "gpt_index/readers/mongo.py", "file_name": "mongo.py"}, "index": 2, "child_indices": [], "ref_doc_id": "2bc13de0428fd82ed9d665fc257405cf2de8929a", "node_info": null}, "3": {"text": "Mongo.py is a file that contains the SimpleMongoReader class, which is used to read data from a Mongo database. It takes in a host, port, and maximum number of documents to load as parameters. The load_data() function is used to load data from the database, and it takes in a database name, collection name, and an optional query dictionary as parameters. It then concatenates each Mongo document into a Document object used by GPT Index, and returns a list of documents. \n\"\"\"", "doc_id": null, "embedding": null, "extra_info": null, "index": 3, "child_indices": [0, 1, 2], "ref_doc_id": null, "node_info": null}}, "root_nodes": {"3": {"text": "Mongo.py is a file that contains the SimpleMongoReader class, which is used to read data from a Mongo database. It takes in a host, port, and maximum number of documents to load as parameters. The load_data() function is used to load data from the database, and it takes in a database name, collection name, and an optional query dictionary as parameters. It then concatenates each Mongo document into a Document object used by GPT Index, and returns a list of documents. \n\"\"\"", "doc_id": null, "embedding": null, "extra_info": null, "index": 3, "child_indices": [0, 1, 2], "ref_doc_id": null, "node_info": null}}, "__type__": "tree"}}}}