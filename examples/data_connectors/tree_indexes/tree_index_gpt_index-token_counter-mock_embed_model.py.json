{"index_struct": {"text": "\nThe gpt_index/token_counter/mock_embed_model.py file contains the MockEmbedding class, which is used for token prediction. It is a subclass of the BaseEmbedding class and provides two main functions: _get_query_embedding and _get_text_embedding. Both functions take a string as an argument and return a list of floats with the same length as the embedding dimension, which is set in the __init__ function. The purpose of this class is to provide a mock embedding model for token prediction, allowing for the prediction of tokens based on a given string.", "doc_id": "027c1a05-2b52-4d53-80b3-8bb89cd5c761", "embedding": null, "extra_info": null, "all_nodes": {"0": {"text": "\"\"\"Mock embedding model.\"\"\"\n\nfrom typing import Any, List\n\nfrom gpt_index.embeddings.base import BaseEmbedding\n\n\nclass MockEmbedding(BaseEmbedding):\n    \"\"\"Mock embedding.\n\n    Used for token prediction.\n\n    Args:\n        embed_dim (int): embedding dimension\n\n    \"\"\"\n\n    def __init__(self, embed_dim: int, *args: Any, **kwargs: Any) -> None:\n        \"\"\"Init params.\"\"\"\n        super().__init__(*args, **kwargs)\n        self.embed_dim = embed_dim\n\n    def _get_query_embedding(self, query: str) -> List[float]:\n        \"\"\"Get query embedding.\"\"\"\n        return [0.5] * self.embed_dim\n\n    def _get_text_embedding(self, text: str) -> List[float]:\n        \"\"\"Get text embedding.\"\"\"\n        return [0.5] * self.embed_dim\n", "doc_id": null, "embedding": null, "extra_info": {"file_path": "gpt_index/token_counter/mock_embed_model.py", "file_name": "mock_embed_model.py"}, "index": 0, "child_indices": [], "ref_doc_id": "9ac4e9006efa30143675c5320e66fe9c1c7bf4a4", "node_info": null}, "1": {"text": "MockEmbedding is a class from the gpt_index/token_counter/mock_embed_model.py file. It is used for token prediction and has two main functions: _get_query_embedding and _get_text_embedding. Both functions take a string as an argument and return a list of floats with the same length as the embedding dimension. The embedding dimension is set in the __init__ function.\n\"\"\"", "doc_id": null, "embedding": null, "extra_info": null, "index": 1, "child_indices": [0], "ref_doc_id": null, "node_info": null}}, "root_nodes": {"1": {"text": "MockEmbedding is a class from the gpt_index/token_counter/mock_embed_model.py file. It is used for token prediction and has two main functions: _get_query_embedding and _get_text_embedding. Both functions take a string as an argument and return a list of floats with the same length as the embedding dimension. The embedding dimension is set in the __init__ function.\n\"\"\"", "doc_id": null, "embedding": null, "extra_info": null, "index": 1, "child_indices": [0], "ref_doc_id": null, "node_info": null}}}, "docstore": {"docs": {"9ac4e9006efa30143675c5320e66fe9c1c7bf4a4": {"text": "\"\"\"Mock embedding model.\"\"\"\n\nfrom typing import Any, List\n\nfrom gpt_index.embeddings.base import BaseEmbedding\n\n\nclass MockEmbedding(BaseEmbedding):\n    \"\"\"Mock embedding.\n\n    Used for token prediction.\n\n    Args:\n        embed_dim (int): embedding dimension\n\n    \"\"\"\n\n    def __init__(self, embed_dim: int, *args: Any, **kwargs: Any) -> None:\n        \"\"\"Init params.\"\"\"\n        super().__init__(*args, **kwargs)\n        self.embed_dim = embed_dim\n\n    def _get_query_embedding(self, query: str) -> List[float]:\n        \"\"\"Get query embedding.\"\"\"\n        return [0.5] * self.embed_dim\n\n    def _get_text_embedding(self, text: str) -> List[float]:\n        \"\"\"Get text embedding.\"\"\"\n        return [0.5] * self.embed_dim\n", "doc_id": "9ac4e9006efa30143675c5320e66fe9c1c7bf4a4", "embedding": null, "extra_info": {"file_path": "gpt_index/token_counter/mock_embed_model.py", "file_name": "mock_embed_model.py"}, "__type__": "Document"}, "027c1a05-2b52-4d53-80b3-8bb89cd5c761": {"text": "\nThe gpt_index/token_counter/mock_embed_model.py file contains the MockEmbedding class, which is used for token prediction. It is a subclass of the BaseEmbedding class and provides two main functions: _get_query_embedding and _get_text_embedding. Both functions take a string as an argument and return a list of floats with the same length as the embedding dimension, which is set in the __init__ function. The purpose of this class is to provide a mock embedding model for token prediction, allowing for the prediction of tokens based on a given string.", "doc_id": "027c1a05-2b52-4d53-80b3-8bb89cd5c761", "embedding": null, "extra_info": null, "all_nodes": {"0": {"text": "\"\"\"Mock embedding model.\"\"\"\n\nfrom typing import Any, List\n\nfrom gpt_index.embeddings.base import BaseEmbedding\n\n\nclass MockEmbedding(BaseEmbedding):\n    \"\"\"Mock embedding.\n\n    Used for token prediction.\n\n    Args:\n        embed_dim (int): embedding dimension\n\n    \"\"\"\n\n    def __init__(self, embed_dim: int, *args: Any, **kwargs: Any) -> None:\n        \"\"\"Init params.\"\"\"\n        super().__init__(*args, **kwargs)\n        self.embed_dim = embed_dim\n\n    def _get_query_embedding(self, query: str) -> List[float]:\n        \"\"\"Get query embedding.\"\"\"\n        return [0.5] * self.embed_dim\n\n    def _get_text_embedding(self, text: str) -> List[float]:\n        \"\"\"Get text embedding.\"\"\"\n        return [0.5] * self.embed_dim\n", "doc_id": null, "embedding": null, "extra_info": {"file_path": "gpt_index/token_counter/mock_embed_model.py", "file_name": "mock_embed_model.py"}, "index": 0, "child_indices": [], "ref_doc_id": "9ac4e9006efa30143675c5320e66fe9c1c7bf4a4", "node_info": null}, "1": {"text": "MockEmbedding is a class from the gpt_index/token_counter/mock_embed_model.py file. It is used for token prediction and has two main functions: _get_query_embedding and _get_text_embedding. Both functions take a string as an argument and return a list of floats with the same length as the embedding dimension. The embedding dimension is set in the __init__ function.\n\"\"\"", "doc_id": null, "embedding": null, "extra_info": null, "index": 1, "child_indices": [0], "ref_doc_id": null, "node_info": null}}, "root_nodes": {"1": {"text": "MockEmbedding is a class from the gpt_index/token_counter/mock_embed_model.py file. It is used for token prediction and has two main functions: _get_query_embedding and _get_text_embedding. Both functions take a string as an argument and return a list of floats with the same length as the embedding dimension. The embedding dimension is set in the __init__ function.\n\"\"\"", "doc_id": null, "embedding": null, "extra_info": null, "index": 1, "child_indices": [0], "ref_doc_id": null, "node_info": null}}, "__type__": "tree"}}}}