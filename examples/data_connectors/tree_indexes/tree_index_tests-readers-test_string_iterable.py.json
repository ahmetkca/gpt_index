{"index_struct": {"text": "\nThis code file tests the StringIterableReader class from the gpt_index.readers module. The StringIterableReader class is used to load data from a list of strings into a data structure. The test_load() function creates an instance of the class and passes in a list of strings as the texts argument. The function then asserts that the length of the documents returned is equal to 2, verifying that the data was successfully loaded and that the class is functioning correctly. The purpose of the code is to ensure that the StringIterableReader class is able to correctly load data from a list of strings into a data structure.", "doc_id": "63761935-8ea3-46ad-9b41-7c5637a88d4c", "embedding": null, "extra_info": null, "all_nodes": {"0": {"text": "\"\"\"Test String Iterable Reader.\"\"\"\n\nfrom gpt_index.readers.string_iterable import StringIterableReader\n\n\ndef test_load() -> None:\n    \"\"\"Test loading data into StringIterableReader.\"\"\"\n    reader = StringIterableReader()\n    documents = reader.load_data(texts=[\"I went to the store\", \"I bought an apple\"])\n    assert len(documents) == 2\n", "doc_id": null, "embedding": null, "extra_info": {"file_path": "tests/readers/test_string_iterable.py", "file_name": "test_string_iterable.py"}, "index": 0, "child_indices": [], "ref_doc_id": "b74ba1a83056318d78436b8155c774bc3a42d4b6", "node_info": null}, "1": {"text": "This code file tests the StringIterableReader class from the gpt_index.readers module. The test_load() function tests the loading of data into the StringIterableReader, by creating an instance of the class and passing in a list of strings as the texts argument. The function then asserts that the length of the documents returned is equal to 2.\n\"\"\"", "doc_id": null, "embedding": null, "extra_info": null, "index": 1, "child_indices": [0], "ref_doc_id": null, "node_info": null}}, "root_nodes": {"1": {"text": "This code file tests the StringIterableReader class from the gpt_index.readers module. The test_load() function tests the loading of data into the StringIterableReader, by creating an instance of the class and passing in a list of strings as the texts argument. The function then asserts that the length of the documents returned is equal to 2.\n\"\"\"", "doc_id": null, "embedding": null, "extra_info": null, "index": 1, "child_indices": [0], "ref_doc_id": null, "node_info": null}}}, "docstore": {"docs": {"b74ba1a83056318d78436b8155c774bc3a42d4b6": {"text": "\"\"\"Test String Iterable Reader.\"\"\"\n\nfrom gpt_index.readers.string_iterable import StringIterableReader\n\n\ndef test_load() -> None:\n    \"\"\"Test loading data into StringIterableReader.\"\"\"\n    reader = StringIterableReader()\n    documents = reader.load_data(texts=[\"I went to the store\", \"I bought an apple\"])\n    assert len(documents) == 2\n", "doc_id": "b74ba1a83056318d78436b8155c774bc3a42d4b6", "embedding": null, "extra_info": {"file_path": "tests/readers/test_string_iterable.py", "file_name": "test_string_iterable.py"}, "__type__": "Document"}, "63761935-8ea3-46ad-9b41-7c5637a88d4c": {"text": "\nThis code file tests the StringIterableReader class from the gpt_index.readers module. The StringIterableReader class is used to load data from a list of strings into a data structure. The test_load() function creates an instance of the class and passes in a list of strings as the texts argument. The function then asserts that the length of the documents returned is equal to 2, verifying that the data was successfully loaded and that the class is functioning correctly. The purpose of the code is to ensure that the StringIterableReader class is able to correctly load data from a list of strings into a data structure.", "doc_id": "63761935-8ea3-46ad-9b41-7c5637a88d4c", "embedding": null, "extra_info": null, "all_nodes": {"0": {"text": "\"\"\"Test String Iterable Reader.\"\"\"\n\nfrom gpt_index.readers.string_iterable import StringIterableReader\n\n\ndef test_load() -> None:\n    \"\"\"Test loading data into StringIterableReader.\"\"\"\n    reader = StringIterableReader()\n    documents = reader.load_data(texts=[\"I went to the store\", \"I bought an apple\"])\n    assert len(documents) == 2\n", "doc_id": null, "embedding": null, "extra_info": {"file_path": "tests/readers/test_string_iterable.py", "file_name": "test_string_iterable.py"}, "index": 0, "child_indices": [], "ref_doc_id": "b74ba1a83056318d78436b8155c774bc3a42d4b6", "node_info": null}, "1": {"text": "This code file tests the StringIterableReader class from the gpt_index.readers module. The test_load() function tests the loading of data into the StringIterableReader, by creating an instance of the class and passing in a list of strings as the texts argument. The function then asserts that the length of the documents returned is equal to 2.\n\"\"\"", "doc_id": null, "embedding": null, "extra_info": null, "index": 1, "child_indices": [0], "ref_doc_id": null, "node_info": null}}, "root_nodes": {"1": {"text": "This code file tests the StringIterableReader class from the gpt_index.readers module. The test_load() function tests the loading of data into the StringIterableReader, by creating an instance of the class and passing in a list of strings as the texts argument. The function then asserts that the length of the documents returned is equal to 2.\n\"\"\"", "doc_id": null, "embedding": null, "extra_info": null, "index": 1, "child_indices": [0], "ref_doc_id": null, "node_info": null}}, "__type__": "tree"}}}}